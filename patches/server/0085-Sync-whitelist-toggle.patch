From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: PureGero <puregero@gmail.com>
Date: Sat, 26 Feb 2022 18:39:19 +1000
Subject: [PATCH] Sync whitelist toggle


diff --git a/src/main/java/net/minecraft/server/players/PlayerList.java b/src/main/java/net/minecraft/server/players/PlayerList.java
index 56433b9db73020bb47d688228436cab65d0f3b82..e08367d679f7a1a1b6f22a6cb8740d6a07ce8cd5 100644
--- a/src/main/java/net/minecraft/server/players/PlayerList.java
+++ b/src/main/java/net/minecraft/server/players/PlayerList.java
@@ -1433,6 +1433,7 @@ public abstract class PlayerList {
     public void setUsingWhiteList(boolean whitelistEnabled) {
         new com.destroystokyo.paper.event.server.WhitelistToggleEvent(whitelistEnabled).callEvent(); // Paper - WhitelistToggleEvent
         this.doWhiteList = whitelistEnabled;
+        if (!WhitelistTogglePacket.updatingWhitelistToggle) MultiPaper.broadcastPacketToExternalServers(new WhitelistTogglePacket(whitelistEnabled)); // MultiPaper
     }
 
     public List<ServerPlayer> getPlayersWithAddress(String ip) {
diff --git a/src/main/java/puregero/multipaper/externalserverprotocol/ExternalServerPacketSerializer.java b/src/main/java/puregero/multipaper/externalserverprotocol/ExternalServerPacketSerializer.java
index 51dd026b70a90cff96242783457a49d02dce7a75..449f63d94d2298489a000b6c303cd5a3e34d0308 100644
--- a/src/main/java/puregero/multipaper/externalserverprotocol/ExternalServerPacketSerializer.java
+++ b/src/main/java/puregero/multipaper/externalserverprotocol/ExternalServerPacketSerializer.java
@@ -67,6 +67,7 @@ public class ExternalServerPacketSerializer {
         addPacket(SpawnUpdatePacket.class, SpawnUpdatePacket::new);
         addPacket(DifficultyUpdatePacket.class, DifficultyUpdatePacket::new);
         addPacket(ScoreboardUpdatePacket.class, ScoreboardUpdatePacket::new);
+        addPacket(WhitelistTogglePacket.class, WhitelistTogglePacket::new);
     }
 
     private static void addPacket(Class<? extends ExternalServerPacket> clazz, Function<FriendlyByteBuf, ExternalServerPacket> deserializer) {
diff --git a/src/main/java/puregero/multipaper/externalserverprotocol/WhitelistTogglePacket.java b/src/main/java/puregero/multipaper/externalserverprotocol/WhitelistTogglePacket.java
new file mode 100644
index 0000000000000000000000000000000000000000..ca0c69ffec95ee01c30eacfaebd7cd428bcd7782
--- /dev/null
+++ b/src/main/java/puregero/multipaper/externalserverprotocol/WhitelistTogglePacket.java
@@ -0,0 +1,40 @@
+package puregero.multipaper.externalserverprotocol;
+
+import net.minecraft.network.FriendlyByteBuf;
+import net.minecraft.server.MinecraftServer;
+import net.minecraft.server.level.ServerLevel;
+import net.minecraft.world.Difficulty;
+import org.bukkit.Bukkit;
+import org.bukkit.World;
+import org.bukkit.craftbukkit.CraftWorld;
+import puregero.multipaper.ExternalServerConnection;
+import puregero.multipaper.MultiPaper;
+
+public class WhitelistTogglePacket extends ExternalServerPacket {
+
+    public static boolean updatingWhitelistToggle = false;
+
+    private final boolean whitelistEnabled;
+
+    public WhitelistTogglePacket(boolean whitelistEnabled) {
+        this.whitelistEnabled = whitelistEnabled;
+    }
+
+    public WhitelistTogglePacket(FriendlyByteBuf in) {
+        whitelistEnabled = in.readBoolean();
+    }
+
+    @Override
+    public void write(FriendlyByteBuf out) {
+        out.writeBoolean(whitelistEnabled);
+    }
+
+    @Override
+    public void handle(ExternalServerConnection connection) {
+        MultiPaper.runSync(() -> {
+            updatingWhitelistToggle = true;
+            MinecraftServer.getServer().getPlayerList().setUsingWhiteList(whitelistEnabled);
+            updatingWhitelistToggle = false;
+        });
+    }
+}
