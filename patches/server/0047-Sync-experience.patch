From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: PureGero <puregero@gmail.com>
Date: Tue, 21 Dec 2021 00:37:18 +1000
Subject: [PATCH] Sync experience


diff --git a/src/main/java/net/minecraft/server/level/ServerPlayer.java b/src/main/java/net/minecraft/server/level/ServerPlayer.java
index 292002a7758c8ac7ed9bcc373d12d3081b924956..03cd6518e89d40feef821ed26fb1f8b448bf8a6f 100644
--- a/src/main/java/net/minecraft/server/level/ServerPlayer.java
+++ b/src/main/java/net/minecraft/server/level/ServerPlayer.java
@@ -188,10 +188,7 @@ import org.bukkit.event.player.PlayerTeleportEvent.TeleportCause;
 import org.bukkit.event.player.PlayerToggleSneakEvent;
 import org.bukkit.inventory.MainHand;
 import puregero.multipaper.*;
-import puregero.multipaper.externalserverprotocol.PlayerChangeDimensionPacket;
-import puregero.multipaper.externalserverprotocol.PlayerChangeGamemodePacket;
-import puregero.multipaper.externalserverprotocol.PlayerCreatePacket;
-import puregero.multipaper.externalserverprotocol.PlayerRemovePacket;
+import puregero.multipaper.externalserverprotocol.*;
 // CraftBukkit end
 
 public class ServerPlayer extends Player {
@@ -704,6 +701,20 @@ public class ServerPlayer extends Player {
         this.lastSentExp = -1;
     }
 
+    // MultiPaper start - sync xp
+    public float lastExperienceProgress = 0;
+    public int lastTotalExperience = 0;
+    public int lastExperienceLevel = 0;
+    public void syncExperience() {
+        if (experienceProgress != lastExperienceProgress || totalExperience != lastTotalExperience || experienceLevel != lastExperienceLevel) {
+            lastExperienceProgress = experienceProgress;
+            lastTotalExperience = totalExperience;
+            lastExperienceLevel = experienceLevel;
+            MultiPaper.broadcastPacketToExternalServers(this, new PlayerExperienceUpdatePacket(this, experienceProgress, totalExperience, experienceLevel));
+        }
+    }
+    // MultiPaper end
+
     public void initMenu(AbstractContainerMenu screenHandler) {
         screenHandler.addSlotListener(this.containerListener);
         screenHandler.setSynchronizer(this.containerSynchronizer);
@@ -2912,6 +2923,19 @@ public class ServerPlayer extends Player {
             this.giveExperiencePoints(this.newExp);
         }
         this.keepLevel = false;
+        // MultiPaper start - Syncing experience after reset
+        if (MultiPaper.isRealPlayer(this)) {
+            // Force resync of local player experience onto other servers if it's non-zero
+            this.lastExperienceProgress = 0;
+            this.lastExperienceLevel = 0;
+            this.lastTotalExperience = 0;
+        } else {
+            // Don't sync experience for external players
+            this.lastExperienceProgress = this.experienceProgress;
+            this.lastExperienceLevel = this.experienceLevel;
+            this.lastTotalExperience = this.totalExperience;
+        }
+        // MultiPaper end - Syncing experience after reset
         this.setDeltaMovement(0, 0, 0); // CraftBukkit - SPIGOT-6948: Reset velocity on death
         this.skipDropExperience = false; // CraftBukkit - SPIGOT-7462: Reset experience drop skip, so that further deaths drop xp
     }
diff --git a/src/main/java/puregero/multipaper/MultiPaper.java b/src/main/java/puregero/multipaper/MultiPaper.java
index ee89fd0ac2380f63dea0a2c4e68e6fa74d717991..05fdfe5e09c51ba3693d81f13838b2c7b02982aa 100644
--- a/src/main/java/puregero/multipaper/MultiPaper.java
+++ b/src/main/java/puregero/multipaper/MultiPaper.java
@@ -91,6 +91,8 @@ public class MultiPaper {
 
                 externalPlayer.tickAttackStrength();
             }
+
+            player.syncExperience();
         }
 
         for (ExternalServer server : getConnection().getServersMap().values()) {
diff --git a/src/main/java/puregero/multipaper/externalserverprotocol/ExternalServerPacketSerializer.java b/src/main/java/puregero/multipaper/externalserverprotocol/ExternalServerPacketSerializer.java
index 565fccba27dcd221660965b9db6b023fd5ed77dd..f903a20532a9b4067e96d83e9962873d017f9fbb 100644
--- a/src/main/java/puregero/multipaper/externalserverprotocol/ExternalServerPacketSerializer.java
+++ b/src/main/java/puregero/multipaper/externalserverprotocol/ExternalServerPacketSerializer.java
@@ -60,6 +60,7 @@ public class ExternalServerPacketSerializer {
         addPacket(AdvancementGrantProgressPacket.class, AdvancementGrantProgressPacket::new);
         addPacket(WeatherUpdatePacket.class, WeatherUpdatePacket::new);
         addPacket(PlayerStatsIncreasePacket.class, PlayerStatsIncreasePacket::new);
+        addPacket(PlayerExperienceUpdatePacket.class, PlayerExperienceUpdatePacket::new);
     }
 
     private static void addPacket(Class<? extends ExternalServerPacket> clazz, Function<FriendlyByteBuf, ExternalServerPacket> deserializer) {
diff --git a/src/main/java/puregero/multipaper/externalserverprotocol/PlayerChangeDimensionPacket.java b/src/main/java/puregero/multipaper/externalserverprotocol/PlayerChangeDimensionPacket.java
index e2fd0dcbbcd7b53783bec1799c701d22d65d208f..42fbce1e396a0bc2168ef09ce6971220005fd11d 100644
--- a/src/main/java/puregero/multipaper/externalserverprotocol/PlayerChangeDimensionPacket.java
+++ b/src/main/java/puregero/multipaper/externalserverprotocol/PlayerChangeDimensionPacket.java
@@ -61,6 +61,12 @@ public class PlayerChangeDimensionPacket extends ExternalServerPacket {
             player.setPosRaw(x, y, z);
 
             if (reset) {
+                player.keepLevel = false;
+                player.newLevel = 0;
+                player.newTotalExp = 0;
+                player.expToDrop = 0;
+                player.newExp = 0;
+
                 player.reset();
             }
 
diff --git a/src/main/java/puregero/multipaper/externalserverprotocol/PlayerExperienceUpdatePacket.java b/src/main/java/puregero/multipaper/externalserverprotocol/PlayerExperienceUpdatePacket.java
new file mode 100644
index 0000000000000000000000000000000000000000..cb0f815c026ce2547a64cacef28e646d2ce44c81
--- /dev/null
+++ b/src/main/java/puregero/multipaper/externalserverprotocol/PlayerExperienceUpdatePacket.java
@@ -0,0 +1,58 @@
+package puregero.multipaper.externalserverprotocol;
+
+import net.minecraft.network.FriendlyByteBuf;
+import net.minecraft.server.MinecraftServer;
+import net.minecraft.server.level.ServerPlayer;
+import org.apache.logging.log4j.LogManager;
+import org.apache.logging.log4j.Logger;
+import puregero.multipaper.ExternalServerConnection;
+import puregero.multipaper.MultiPaper;
+
+import java.util.UUID;
+
+public class PlayerExperienceUpdatePacket extends ExternalServerPacket {
+    private static final Logger LOGGER = LogManager.getLogger(PlayerExperienceUpdatePacket.class.getSimpleName());
+
+    private final UUID uuid;
+    private final float progress;
+    private final int total;
+    private final int level;
+
+    public PlayerExperienceUpdatePacket(ServerPlayer player, float progress, int total, int level) {
+        this.uuid = player.getUUID();
+        this.progress = progress;
+        this.total = total;
+        this.level = level;
+    }
+
+    public PlayerExperienceUpdatePacket(FriendlyByteBuf in) {
+        uuid = in.readUUID();
+        progress = in.readFloat();
+        total = in.readInt();
+        level = in.readInt();
+    }
+
+    @Override
+    public void write(FriendlyByteBuf out) {
+        out.writeUUID(uuid);
+        out.writeFloat(progress);
+        out.writeInt(total);
+        out.writeInt(level);
+    }
+
+    @Override
+    public void handle(ExternalServerConnection connection) {
+        MultiPaper.runSync(() -> {
+            ServerPlayer player = MinecraftServer.getServer().getPlayerList().getPlayer(uuid);
+
+            if (player == null) {
+                LOGGER.warn("Could not find player " + uuid);
+                return;
+            }
+
+            player.experienceProgress = player.lastExperienceProgress = progress;
+            player.totalExperience = player.lastTotalExperience = total;
+            player.experienceLevel = player.lastExperienceLevel = level;
+        });
+    }
+}
