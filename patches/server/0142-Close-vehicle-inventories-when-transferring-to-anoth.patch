From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: PureGero <puregero@gmail.com>
Date: Thu, 19 Oct 2023 17:33:20 +0900
Subject: [PATCH] Close vehicle inventories when transferring to another server


diff --git a/src/main/java/net/minecraft/world/entity/Entity.java b/src/main/java/net/minecraft/world/entity/Entity.java
index a644cb0ea4a2d0061019781feb9f608cf7b2be47..feff562def52ba4c1c70bcfd7227b8443d171ed1 100644
--- a/src/main/java/net/minecraft/world/entity/Entity.java
+++ b/src/main/java/net/minecraft/world/entity/Entity.java
@@ -10,6 +10,7 @@ import com.mojang.logging.LogUtils;
 import io.papermc.paper.chunk.system.scheduling.NewChunkHolder;
 import it.unimi.dsi.fastutil.objects.Object2DoubleArrayMap;
 import it.unimi.dsi.fastutil.objects.Object2DoubleMap;
+import java.util.ArrayList;
 import java.util.Arrays;
 import java.util.Collections;
 import java.util.HashSet;
@@ -76,6 +77,7 @@ import net.minecraft.tags.FluidTags;
 import net.minecraft.tags.TagKey;
 import net.minecraft.util.Mth;
 import net.minecraft.util.RandomSource;
+import net.minecraft.world.Container;
 import net.minecraft.world.InteractionHand;
 import net.minecraft.world.InteractionResult;
 import net.minecraft.world.Nameable;
@@ -125,6 +127,8 @@ import net.minecraft.world.phys.shapes.VoxelShape;
 import net.minecraft.world.scores.PlayerTeam;
 import net.minecraft.world.scores.ScoreHolder;
 import net.minecraft.world.scores.Team;
+import org.bukkit.entity.HumanEntity;
+import org.bukkit.event.inventory.InventoryCloseEvent;
 import org.joml.Vector3f;
 import org.slf4j.Logger;
 import org.bukkit.Bukkit;
@@ -3196,6 +3200,8 @@ public abstract class Entity implements Nameable, EntityAccess, CommandSource, S
                     // Make sure we send the vehicle to the new controlling passenger, even if they don't have the chunk loaded
                     servers.add(newController.externalServerConnection.externalServer);
                 }
+
+                closeInventoriesRecursive(entity.getRootVehicle()); // Close any open inventories on the vehicle
                 EntityUpdateWithDependenciesPacket.sendVehicleAndPassengersPacketsRecursivelyToServers(entity.getRootVehicle(), servers);
             }
 // MultiPaper end - inform other servers that the player is no longer riding the entity and hand them the entity's data
@@ -3203,6 +3209,24 @@ public abstract class Entity implements Nameable, EntityAccess, CommandSource, S
 
     }
 
+    // MultiPaper start - close inventories when an entity changes servers
+    private void closeInventoriesRecursive(Entity entity) {
+        if (entity instanceof Container container) {
+            List<HumanEntity> viewers = container.getViewers();
+            if (!viewers.isEmpty()) {
+                for (HumanEntity viewer : new ArrayList<>(container.getViewers())) {
+                    if (viewer instanceof CraftPlayer craftPlayer) {
+                        craftPlayer.closeInventory(InventoryCloseEvent.Reason.UNLOADED);
+                    }
+                }
+            }
+        }
+        for (Entity passenger : entity.getPassengers()) {
+            closeInventoriesRecursive(passenger);
+        }
+    }
+    // MultiPaper end - close inventories when an entity changes servers
+
     public void stopRiding() {
         this.removeVehicle();
     }
