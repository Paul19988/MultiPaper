From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: Xymb <xymb@endcrystal.me>
Date: Fri, 17 Feb 2023 03:17:40 +0100
Subject: [PATCH] Fix cross-server Ender Dragon sword hit.

Made UUID and ID of dragon parts deterministic.

diff --git a/src/main/java/net/minecraft/server/level/ServerLevel.java b/src/main/java/net/minecraft/server/level/ServerLevel.java
index d4120c64aaf0b3c5ad4c68688b412c49db97ec27..b3caf227595bd9ec9ca65c13bfc6c6db1e6a8602 100644
--- a/src/main/java/net/minecraft/server/level/ServerLevel.java
+++ b/src/main/java/net/minecraft/server/level/ServerLevel.java
@@ -2178,6 +2178,21 @@ public class ServerLevel extends Level implements WorldGenLevel {
         return entity != null ? entity : (Entity) this.dragonParts.get(id);
     }
 
+    // MultiPaper start
+    public Entity getEntityOrPart(UUID uuid) {
+        Entity entity = (Entity) this.getEntities().get(uuid);
+        if (entity != null) {
+            return entity;
+        }
+        for (Entity part : this.dragonParts.values()) {
+            if (part.getUUID().equals(uuid)) {
+                return part;
+            }
+        }
+        return null;
+    }
+    // Multipaper end
+
     @Nullable
     public Entity getEntity(UUID uuid) {
         return (Entity) this.getEntities().get(uuid);
diff --git a/src/main/java/net/minecraft/world/entity/Entity.java b/src/main/java/net/minecraft/world/entity/Entity.java
index 9b50286b880392ea2ccc5831d1a5ac0734b654c0..d225f2973841311c6348a8aacf3f7dbc9e2a7877 100644
--- a/src/main/java/net/minecraft/world/entity/Entity.java
+++ b/src/main/java/net/minecraft/world/entity/Entity.java
@@ -80,6 +80,7 @@ import net.minecraft.world.InteractionResult;
 import net.minecraft.world.Nameable;
 import net.minecraft.world.damagesource.DamageSource;
 import net.minecraft.world.damagesource.DamageSources;
+import net.minecraft.world.entity.boss.enderdragon.EnderDragon; // MultiPaper
 import net.minecraft.world.entity.item.ItemEntity;
 import net.minecraft.world.entity.player.Player;
 import net.minecraft.world.entity.vehicle.Boat;
@@ -650,6 +651,8 @@ public abstract class Entity implements Nameable, EntityAccess, CommandSource, S
         this.getEntityData().registrationLocked = true; // Spigot
         this.setPos(0.0D, 0.0D, 0.0D);
         this.eyeHeight = this.getEyeHeight(net.minecraft.world.entity.Pose.STANDING, this.dimensions);
+
+        if (this instanceof EnderDragon) ((EnderDragon)this).regenerateUUIDs(); // MultiPaper
     }
 
     public boolean isColliding(BlockPos pos, BlockState state) {
diff --git a/src/main/java/net/minecraft/world/entity/boss/EnderDragonPart.java b/src/main/java/net/minecraft/world/entity/boss/EnderDragonPart.java
index 1dd1bd40607e6da09abb0315097588aed550c0c5..e6c19b0bc71e935faa3c878568533b41f0d48c74 100644
--- a/src/main/java/net/minecraft/world/entity/boss/EnderDragonPart.java
+++ b/src/main/java/net/minecraft/world/entity/boss/EnderDragonPart.java
@@ -1,5 +1,9 @@
 package net.minecraft.world.entity.boss;
 
+import java.nio.charset.StandardCharsets;
+import java.security.MessageDigest;
+import java.security.NoSuchAlgorithmException;
+import java.util.UUID;
 import javax.annotation.Nullable;
 import net.minecraft.nbt.CompoundTag;
 import net.minecraft.network.protocol.Packet;
@@ -10,20 +14,47 @@ import net.minecraft.world.entity.EntityDimensions;
 import net.minecraft.world.entity.Pose;
 import net.minecraft.world.entity.boss.enderdragon.EnderDragon;
 import net.minecraft.world.item.ItemStack;
+import net.minecraft.util.Mth; // MultiPaper
 
 public class EnderDragonPart extends Entity {
     public final EnderDragon parentMob;
     public final String name;
     private final EntityDimensions size;
 
-    public EnderDragonPart(EnderDragon owner, String name, float width, float height) {
+    public EnderDragonPart(EnderDragon owner, String name, float width, float height, String uuidSuffix) { // MultiPaper
         super(owner.getType(), owner.level());
         this.size = EntityDimensions.scalable(width, height);
         this.refreshDimensions();
         this.parentMob = owner;
         this.name = name;
+        // MultiPaper start
+        this.uuid = this.deterministicUUID(owner.getUUID().toString(), uuidSuffix);
+        this.stringUUID = this.uuid.toString();
+        // MultiPaper end
     }
 
+    // MultiPaper start
+    public void regenerateUUID(EnderDragon owner, String uuidSuffix, int id) {
+        this.setId(id);
+        this.uuid = this.deterministicUUID(owner.getUUID().toString(), uuidSuffix);
+        this.stringUUID = this.uuid.toString();
+    }
+
+    private UUID deterministicUUID(String str1, String str2) {
+        try {
+            MessageDigest digest = MessageDigest.getInstance("SHA-256");
+            byte[] hash1 = digest.digest(str1.getBytes(StandardCharsets.UTF_8));
+            byte[] hash2 = digest.digest(str2.getBytes(StandardCharsets.UTF_8));
+            byte[] combinedHash = new byte[hash1.length + hash2.length];
+            System.arraycopy(hash1, 0, combinedHash, 0, hash1.length);
+            System.arraycopy(hash2, 0, combinedHash, hash1.length, hash2.length);
+            return UUID.nameUUIDFromBytes(combinedHash);
+        } catch (NoSuchAlgorithmException e) {
+            return Mth.createInsecureUUID(this.random);
+        }
+    }
+    // MultiPaper end
+
     // Purpur start
     @Override
     public net.minecraft.world.InteractionResult interact(net.minecraft.world.entity.player.Player player, net.minecraft.world.InteractionHand hand) {
diff --git a/src/main/java/net/minecraft/world/entity/boss/enderdragon/EnderDragon.java b/src/main/java/net/minecraft/world/entity/boss/enderdragon/EnderDragon.java
index ff4b188084d43af9e8ed60e6a77996018e589807..7acb313b2b5405ca0a55d14a515cb577c62c8ae9 100644
--- a/src/main/java/net/minecraft/world/entity/boss/enderdragon/EnderDragon.java
+++ b/src/main/java/net/minecraft/world/entity/boss/enderdragon/EnderDragon.java
@@ -4,6 +4,7 @@ import com.google.common.collect.Lists;
 import com.mojang.logging.LogUtils;
 import java.util.Iterator;
 import java.util.List;
+import java.util.UUID; // MultiPaper
 import javax.annotation.Nullable;
 import net.minecraft.core.BlockPos;
 import net.minecraft.core.particles.ParticleTypes;
@@ -117,14 +118,16 @@ public class EnderDragon extends Mob implements Enemy {
         this.nodes = new Node[24];
         this.nodeAdjacency = new int[24];
         this.openSet = new BinaryHeap();
-        this.head = new EnderDragonPart(this, "head", 1.0F, 1.0F);
-        this.neck = new EnderDragonPart(this, "neck", 3.0F, 3.0F);
-        this.body = new EnderDragonPart(this, "body", 5.0F, 3.0F);
-        this.tail1 = new EnderDragonPart(this, "tail", 2.0F, 2.0F);
-        this.tail2 = new EnderDragonPart(this, "tail", 2.0F, 2.0F);
-        this.tail3 = new EnderDragonPart(this, "tail", 2.0F, 2.0F);
-        this.wing1 = new EnderDragonPart(this, "wing", 4.0F, 2.0F);
-        this.wing2 = new EnderDragonPart(this, "wing", 4.0F, 2.0F);
+        // MultiPaper start - add unique identifier to each ender dragon part to make them uniquely identifiable
+        this.head = new EnderDragonPart(this, "head", 1.0F, 1.0F, "head");
+        this.neck = new EnderDragonPart(this, "neck", 3.0F, 3.0F, "neck");
+        this.body = new EnderDragonPart(this, "body", 5.0F, 3.0F, "body");
+        this.tail1 = new EnderDragonPart(this, "tail", 2.0F, 2.0F, "tail1");
+        this.tail2 = new EnderDragonPart(this, "tail", 2.0F, 2.0F, "tail2");
+        this.tail3 = new EnderDragonPart(this, "tail", 2.0F, 2.0F, "tail3");
+        this.wing1 = new EnderDragonPart(this, "wing", 4.0F, 2.0F, "wing1");
+        this.wing2 = new EnderDragonPart(this, "wing", 4.0F, 2.0F, "wing2");
+        // MultiPaper stop
         this.subEntities = new EnderDragonPart[]{this.head, this.neck, this.body, this.tail1, this.tail2, this.tail3, this.wing1, this.wing2};
         this.setHealth(this.getMaxHealth());
         this.noPhysics = true;
@@ -150,9 +153,25 @@ public class EnderDragon extends Mob implements Enemy {
                 setYawPitch(rider.getYRot() - 180F, rider.xRotO * 0.5F);
             }
         };
+        int DRAGON_ENTITY_COUNT = 9; // MultiPaper
+        this.setId(puregero.multipaper.MultiPaperEntityIdManager.next(DRAGON_ENTITY_COUNT)[0]); // MultiPaper
+        this.regenerateUUIDs(); // MultiPaper
         // Purpur end
     }
 
+    // MultiPaper start
+    public void regenerateUUIDs() {
+        this.head.regenerateUUID(this, "head", this.getId() + 1);
+        this.neck.regenerateUUID(this, "neck", this.getId() + 2);
+        this.body.regenerateUUID(this, "body", this.getId() + 3);
+        this.tail1.regenerateUUID(this, "tail1", this.getId() + 4);
+        this.tail2.regenerateUUID(this, "tail2", this.getId() + 5);
+        this.tail3.regenerateUUID(this, "tail3", this.getId() + 6);
+        this.wing1.regenerateUUID(this, "wing1", this.getId() + 7);
+        this.wing2.regenerateUUID(this, "wing2", this.getId() + 8);
+    }
+    // MultiPaper end
+
     // Purpur start
     @Override
     public boolean isRidable() {
diff --git a/src/main/java/puregero/multipaper/MultiPaperEntityIdManager.java b/src/main/java/puregero/multipaper/MultiPaperEntityIdManager.java
index a3fe1beeba2c6d51a3533f9f74b5694b11bd57af..0ae3c163853e5620640989a754109cc85bad8b41 100644
--- a/src/main/java/puregero/multipaper/MultiPaperEntityIdManager.java
+++ b/src/main/java/puregero/multipaper/MultiPaperEntityIdManager.java
@@ -61,6 +61,32 @@ public class MultiPaperEntityIdManager {
         });
     }
 
+    // Generate sequential entity ids
+    public static int[] next(int count) {
+        if (MultiPaperConfiguration.get().syncSettings.syncEntityIds) {
+            int[] ids = new int[count];
+            int progress = 0;
+            while (progress < count) {
+                ids[progress] = next();
+                if (progress > 0) {
+                    if (ids[progress] != ids[progress - 1] + 1) {
+                        ids[0] = ids[progress];
+                        progress = 1;
+                        continue;
+                    }
+                }
+                progress++;
+            }
+            return ids;
+        } else {
+            int[] ids = new int[count];
+            for (int i = 0; i < count; i++) {
+                ids[i] = LOCAL_ENTITY_COUNTER.getAndIncrement();
+            }
+            return ids;
+        }
+    }
+
     public static int next() {
         if (MultiPaperConfiguration.get().syncSettings.syncEntityIds) {
             Block block = entityIdBlock;
diff --git a/src/main/java/puregero/multipaper/externalserverprotocol/PlayerActionOnEntityPacket.java b/src/main/java/puregero/multipaper/externalserverprotocol/PlayerActionOnEntityPacket.java
index 50068dcb2184856a3ef40d92f2e45be3a0261309..7ca5b2c90b7901aed2eeeac20156f576f3aad090 100644
--- a/src/main/java/puregero/multipaper/externalserverprotocol/PlayerActionOnEntityPacket.java
+++ b/src/main/java/puregero/multipaper/externalserverprotocol/PlayerActionOnEntityPacket.java
@@ -60,7 +60,7 @@ public class PlayerActionOnEntityPacket extends ExternalServerPacket {
                 LOGGER.warn("Tried to run an action on a non-existent player with uuid " + uuid);
                 return;
             }
-            Entity entity = ((ServerLevel) player.level).getEntity(entityUuid);
+            Entity entity = ((ServerLevel) player.level()).getEntityOrPart(entityUuid); // MultiPaper
             if (entity == null) {
                 LOGGER.warn(player.getScoreboardName() + " tried to run an action on a non-existent entity with uuid " + entityUuid);
                 return;
